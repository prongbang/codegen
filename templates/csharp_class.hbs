/*
 * {{ StructName }} - Generated C# Class
 * 
 * This file was automatically generated from the '{{ TableName }}' database table.
 * Do not edit this file manually - regenerate it using the codegen tool.
 *
 * Table: {{ TableName }}
 * Generated: Auto-generated
 * Generator: CodeGen v0.1.0
 */

{{#if Imports}}
{{#each Imports}}
using {{this}};
{{/each}}

{{/if}}
using System;
using System.Collections.Generic;
using System.Text.Json.Serialization;

namespace GeneratedModels
{
    /// <summary>
    /// {{ StructName }} represents a row from the '{{ TableName }}' table.
    /// </summary>
    /// <remarks>
    /// This class is automatically generated from the database schema and includes
    /// all columns with appropriate C# types and JSON serialization support.
    /// </remarks>
    public class {{ StructName }}
    {
{{#each Columns}}
        {{#if ColumnComment}}
        /// <summary>
        /// {{ ColumnComment }}
        /// </summary>
        /// <value>
        /// Database column: {{ OriginalColumnName }}<br/>
        /// Type: {{ LangType }}{{#if IsNullable}}<br/>
        /// Nullable: true{{/if}}
        /// </value>
        {{else}}
        /// <summary>
        /// Database column: {{ OriginalColumnName }}
        /// </summary>
        /// <value>
        /// Type: {{ LangType }}{{#if IsNullable}}<br/>
        /// Nullable: true{{/if}}
        /// </value>
        {{/if}}
        {{#if LangTags}}
        {{{ LangTags }}}
        {{/if}}
        [JsonPropertyName("{{ OriginalColumnName }}")]
        public {{ LangType }} {{ FieldName }} { get; set; }

{{/each}}
        /// <summary>
        /// Create {{ StructName }} from dictionary
        /// </summary>
        public static {{ StructName }} FromDictionary(Dictionary<string, object> data)
        {
            return new {{ StructName }}
            {
{{#each Columns}}
                {{ FieldName }} = data.ContainsKey("{{ OriginalColumnName }}") ? ({{ LangType }})data["{{ OriginalColumnName }}"] : default,
{{/each}}
            };
        }

        /// <summary>
        /// Convert {{ StructName }} to dictionary
        /// </summary>
        public Dictionary<string, object> ToDictionary()
        {
            return new Dictionary<string, object>
            {
{{#each Columns}}
                { "{{ OriginalColumnName }}", {{ FieldName }} },
{{/each}}
            };
        }
    }
}
