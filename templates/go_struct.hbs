/*
Package {{ PackageName }} contains auto-generated structs from database tables.

{{ StructName }} - Generated Go Struct

This file was automatically generated from the '{{ TableName }}' database table.
Do not edit this file manually - regenerate it using the codegen tool.

Table: {{ TableName }}
Generated: Auto-generated
Generator: CodeGen v0.1.0
*/
package {{ PackageName }}

{{#if Imports}}
import (
	{{#each Imports}}
	"{{this}}"
	{{/each}}
	"encoding/json"
)
{{/if}}

// {{ StructName }} represents a row from the '{{ TableName }}' table.
//
// This struct is automatically generated from the database schema and includes
// all columns with appropriate Go types and JSON serialization tags.
type {{ StructName }} struct {
{{#each Columns}}
	{{#if ColumnComment}}
	// {{ ColumnComment }}
	//
	// Database column: {{ OriginalColumnName }}
	// Type: {{ LangType }}{{#if IsNullable}} (nullable){{/if}}{{#if DefaultValue}}
	// Default: {{ DefaultValue }}{{/if}}
	{{else}}
	// Database column: {{ OriginalColumnName }}
	// Type: {{ LangType }}{{#if IsNullable}} (nullable){{/if}}{{#if DefaultValue}}
	// Default: {{ DefaultValue }}{{/if}}
	{{/if}}
	{{ FieldName }} {{ LangType }} {{#if LangTags}}{{{ LangTags }}}{{else}}`json:"{{ OriginalColumnName }}" db:"{{ OriginalColumnName }}"`{{/if}}
{{/each}}
}

// New{{ StructName }} creates a new {{ StructName }} instance
func New{{ StructName }}(
{{#each Columns}}
	{{ to_snake_case FieldName }} {{ LangType }},
{{/each}}
) *{{ StructName }} {
	return &{{ StructName }}{
{{#each Columns}}
		{{ FieldName }}: {{ to_snake_case FieldName }},
{{/each}}
	}
}

// ToJSON converts {{ StructName }} to JSON string
func (s {{ StructName }}) ToJSON() (string, error) {
	bytes, err := json.Marshal(s)
	if err != nil {
		return "", fmt.Errorf("failed to marshal {{ StructName }}: %w", err)
	}
	return string(bytes), nil
}

// FromJSON creates {{ StructName }} from JSON string
func {{ StructName }}FromJSON(jsonStr string) (*{{ StructName }}, error) {
	var s {{ StructName }}
	err := json.Unmarshal([]byte(jsonStr), &s)
	if err != nil {
		return nil, fmt.Errorf("failed to unmarshal {{ StructName }}: %w", err)
	}
	return &s, nil
}
